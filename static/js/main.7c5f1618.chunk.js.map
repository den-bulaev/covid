{"version":3,"sources":["Api/api.js","components/Countries/Countries.jsx","icons/logo.png","icons/confirmed.svg","icons/deaths.svg","icons/recovered.svg","components/App/App.jsx","index.js"],"names":["BASE_URL","request","endpoint","options","fetch","then","response","ok","Error","status","statusText","json","result","Countries","query","setFilterVisibility","setCountryInfo","useState","countries","setCountries","count","useEffect","method","getDate","dateObject","push","getFullYear","getMonth","join","handleClick","event","customAlert","document","querySelector","setTimeout","classList","add","countryName","target","innerText","toLowerCase","replace","from","Date","to","getCountry","className","filter","Country","includes","map","ID","TotalConfirmed","onClick","React","memo","App","setQurey","filterVisibility","countryInfo","src","logo","alt","type","placeholder","value","onChange","confirmed","Confirmed","deaths","Deaths","recovered","Recovered","remove","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7c5f1618.chunk.js","sourcesContent":["const BASE_URL = 'https://api.covid19api.com/';\n\nconst request = (endpoint = '', options) => (\n  fetch(BASE_URL + endpoint, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then((result) => result)\n);\n\nexport default request;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport request from '../../Api/api';\n\nimport './Countries.css';\n\nconst Countries = ({ query, setFilterVisibility, setCountryInfo }) => {\n  const [countries, setCountries] = useState([]);\n\n  let count = 0;\n\n  const getCountryNumber = () => {\n    count += 1;\n\n    return count;\n  };\n\n  useEffect(() => {\n    request('summary', { method: 'GET' })\n      .then((response) => {\n        setCountries(response.Countries);\n      });\n  }, []);\n\n  const filteredCountries = () => {\n    if (query === '') {\n      return countries;\n    }\n\n    return countries.filter(\n      ({ Country }) => Country\n        .toLowerCase()\n        .includes(query.toLowerCase()),\n    );\n  };\n\n  const getDate = (dateObject) => {\n    const result = [];\n\n    result.push(dateObject.getFullYear());\n    result.push(dateObject.getMonth() + 1);\n    result.push(dateObject.getDate());\n\n    return result.join('-');\n  };\n\n  const getCountry = (event) => {\n    const countryName = event.target.innerText\n      .toLowerCase()\n      .replace(/[()']/g, '')\n      .replace(/ô/, 'o');\n    const from = getDate(new Date(new Date() - 86400000));\n    const to = getDate(new Date());\n\n    request(`total/country/${countryName}?from=${from}T00:00:00Z&to=${to}T00:00:00Z`)\n      .then((response) => setCountryInfo(response[0]));\n  };\n\n  const handleClick = (event) => {\n    const customAlert = document.querySelector('.alert');\n\n    setFilterVisibility(true);\n\n    setTimeout(() => customAlert.classList.add('visible'), 300);\n\n    getCountry(event);\n  };\n\n  return (\n    <ul className=\"countries-list\">\n      <li className=\"countries-list-item\">\n        <span className=\"countries-number\">№</span>\n        <div className=\"countries-container\">Country</div>\n        <div className=\"countries-container\">\n          <span className=\"countries-list-info\">Total Confirmed</span>\n        </div>\n      </li>\n\n      {filteredCountries().map(({ ID, Country, TotalConfirmed }) => (\n        <li\n          key={ID}\n          className=\"countries-list-item\"\n        >\n          <div className=\"countries-number\">{getCountryNumber()}</div>\n          <div className=\"countries-container\">\n            <pre onClick={handleClick} className=\"countries-country-name\">{Country}</pre>\n          </div>\n          <div className=\"countries-container\">\n            <span className=\"countries-list-info\">{TotalConfirmed}</span>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nCountries.propTypes = {\n  query: PropTypes.string.isRequired,\n  setFilterVisibility: PropTypes.func.isRequired,\n  setCountryInfo: PropTypes.func.isRequired,\n};\n\nexport default React.memo(Countries);\n","export default __webpack_public_path__ + \"static/media/logo.588ddb26.png\";","export default __webpack_public_path__ + \"static/media/confirmed.9257d438.svg\";","export default __webpack_public_path__ + \"static/media/deaths.842606bb.svg\";","export default __webpack_public_path__ + \"static/media/recovered.edd4f3fd.svg\";","import React, { useState } from 'react';\n\nimport Countries from '../Countries/Countries';\nimport logo from '../../icons/logo.png';\nimport confirmed from '../../icons/confirmed.svg';\nimport deaths from '../../icons/deaths.svg';\nimport recovered from '../../icons/recovered.svg';\n\nimport './App.css';\n\nfunction App() {\n  const [query, setQurey] = useState('');\n  const [filterVisibility, setFilterVisibility] = useState(false);\n  const [countryInfo, setCountryInfo] = useState({});\n\n  const handleClick = () => {\n    const customAlert = document.querySelector('.alert');\n\n    customAlert.classList.remove('visible');\n    setFilterVisibility(false);\n    setCountryInfo({});\n  };\n\n  return (\n    <>\n      <header className=\"header\">\n        <img\n          src={logo}\n          alt=\"logo\"\n          className=\"header-logo\"\n        />\n\n        <h1 className=\"header-text\">STATISTIC</h1>\n\n        <input\n          type=\"search\"\n          placeholder=\"Search...\"\n          className=\"search-field\"\n          value={query}\n          onChange={(event) => setQurey(event.target.value)}\n        />\n      </header>\n\n      <div className=\"alert\">\n        <h2 className=\"alert-title\">\n          {countryInfo.Country}\n        </h2>\n\n        <div className=\"alert-country-info\">\n          <div className=\"alert-wrapper\">\n            <div className=\"alert-info-with-icon\">\n              <img\n                src={confirmed}\n                alt=\"\"\n                className=\"alert-icon\"\n              />\n              <p className=\"alert-text\">Total Confirmed</p>\n            </div>\n\n            <p className=\"alert-text\">{countryInfo.Confirmed}</p>\n          </div>\n\n          <div className=\"alert-wrapper\">\n            <div className=\"alert-info-with-icon\">\n              <img\n                src={deaths}\n                alt=\"\"\n                className=\"alert-icon\"\n              />\n              <p className=\"alert-text\">Total Deaths</p>\n            </div>\n\n            <p className=\"alert-text\">{countryInfo.Deaths}</p>\n          </div>\n\n          <div className=\"alert-wrapper\">\n            <div className=\"alert-info-with-icon\">\n              <img\n                src={recovered}\n                alt=\"\"\n                className=\"alert-icon\"\n              />\n              <p className=\"alert-text\">Total Recovered</p>\n            </div>\n\n            <p className=\"alert-text\">{countryInfo.Recovered}</p>\n          </div>\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={handleClick}\n          className=\"alert-button\"\n        >\n          ok\n        </button>\n      </div>\n\n      {filterVisibility && <div className=\"filter\" />}\n\n      <Countries\n        query={query}\n        setFilterVisibility={setFilterVisibility}\n        setCountryInfo={setCountryInfo}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}